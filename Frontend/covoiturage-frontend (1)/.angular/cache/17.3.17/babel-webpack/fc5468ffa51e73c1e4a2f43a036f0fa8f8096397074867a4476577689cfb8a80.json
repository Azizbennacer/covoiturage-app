{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../services/auth.service\";\nexport let TrajetService = /*#__PURE__*/(() => {\n  class TrajetService {\n    constructor(http, authService) {\n      this.http = http;\n      this.authService = authService;\n      this.apiUrl = 'http://localhost:8080/api/trajets';\n    }\n    getAllTrajets() {\n      return this.http.get(this.apiUrl);\n    }\n    createTrajet(trajet) {\n      // Récupérer l'email du user connecté\n      const email = this.authService.getUserEmail();\n      if (!email) {\n        console.error('Email utilisateur non disponible');\n        throw new Error('Email utilisateur non disponible');\n      }\n      // Ajouter \":00\" aux dates sans secondes\n      if (trajet.dateTrajet && trajet.dateTrajet.length === 16) {\n        trajet.dateTrajet = trajet.dateTrajet + ':00';\n      }\n      // Construire l'URL avec le paramètre email\n      const urlWithEmail = `${this.apiUrl}?email=${encodeURIComponent(email)}`;\n      // Envoyer la requête POST avec trajet et email dans l'URL\n      return this.http.post(urlWithEmail, trajet);\n    }\n    deleteTrajet(id) {\n      return this.http.delete(`${this.apiUrl}/${id}`);\n    }\n    getTrajetsByUserEmail() {\n      const email = this.authService.getUserEmail();\n      if (!email) {\n        console.error('Email utilisateur non disponible');\n        return;\n      }\n      return this.http.get(`http://localhost:8080/api/trajets/conducteur/email/${email}`);\n    }\n    static {\n      this.ɵfac = function TrajetService_Factory(t) {\n        return new (t || TrajetService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.AuthService));\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: TrajetService,\n        factory: TrajetService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return TrajetService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}